# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-12-06 02:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='D_Bus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('phases', models.CharField(max_length=50, null=True)),
                ('lat', models.FloatField(null=True)),
                ('lng', models.FloatField(null=True)),
                ('busType', models.CharField(max_length=20, null=True)),
                ('voltA', models.CharField(max_length=50, null=True)),
                ('voltB', models.CharField(max_length=50, null=True)),
                ('voltC', models.CharField(max_length=50, null=True)),
                ('nominalVolt', models.CharField(max_length=50, null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'node', max_length=50)),
            ],
            options={
                'db_table': 'D_Bus',
            },
        ),
        migrations.CreateModel(
            name='D_Capacitor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('phases', models.CharField(max_length=50, null=True)),
                ('control', models.CharField(max_length=50)),
                ('capacitor_A', models.CharField(max_length=50)),
                ('capacitor_B', models.CharField(max_length=50)),
                ('capacitor_C', models.CharField(max_length=50)),
                ('time_delay', models.FloatField(null=True)),
                ('switchA', models.CharField(max_length=10, null=True)),
                ('switchB', models.CharField(max_length=10, null=True)),
                ('switchC', models.CharField(max_length=10, null=True)),
                ('control_level', models.CharField(max_length=20, null=True)),
                ('phases_connected', models.CharField(max_length=50, null=True)),
                ('dwell_time', models.FloatField(null=True)),
                ('pt_phase', models.CharField(max_length=20, null=True)),
                ('nominal_voltage', models.CharField(max_length=50, null=True)),
                ('voltage_set_high', models.CharField(max_length=50, null=True)),
                ('voltage_set_low', models.CharField(max_length=50, null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'capacitor', max_length=50)),
            ],
            options={
                'db_table': 'D_Capacitor',
            },
        ),
        migrations.CreateModel(
            name='D_Generator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('capacity', models.FloatField(null=True)),
                ('cost', models.FloatField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'generator', max_length=50)),
            ],
            options={
                'db_table': 'D_Generator',
            },
        ),
        migrations.CreateModel(
            name='D_LineSpacing',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('distance_AB', models.FloatField(default=0.0)),
                ('distance_AC', models.FloatField(default=0.0)),
                ('distance_AN', models.FloatField(default=0.0)),
                ('distance_BC', models.FloatField(default=0.0)),
                ('distance_BN', models.FloatField(default=0.0)),
                ('distance_CN', models.FloatField(default=0.0)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'line_spacing', max_length=50)),
            ],
            options={
                'db_table': 'D_LineSpacing',
            },
        ),
        migrations.CreateModel(
            name='D_Load',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('phases', models.CharField(max_length=50, null=True)),
                ('voltage_A', models.CharField(max_length=50, null=True)),
                ('voltage_B', models.CharField(max_length=50, null=True)),
                ('voltage_C', models.CharField(max_length=50, null=True)),
                ('constant_power_A', models.CharField(max_length=50, null=True)),
                ('constant_power_B', models.CharField(max_length=50, null=True)),
                ('constant_power_C', models.CharField(max_length=50, null=True)),
                ('nominal_voltage', models.CharField(max_length=50, null=True)),
                ('load_class', models.CharField(max_length=200, null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'load', max_length=50)),
            ],
            options={
                'db_table': 'D_Load',
            },
        ),
        migrations.CreateModel(
            name='D_OverheadLine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phases', models.CharField(max_length=50, null=True)),
                ('length', models.FloatField(default=0)),
                ('bmat', models.FloatField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('gldGroupId', models.CharField(default=b'Distribution_Line', max_length=50)),
                ('object', models.CharField(default=b'overhead_line', max_length=50, null=True)),
            ],
            options={
                'db_table': 'D_OverheadLine',
            },
        ),
        migrations.CreateModel(
            name='D_OverheadLineConductor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('geometric_mean_radius', models.FloatField()),
                ('resistance', models.FloatField()),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'overhead_line_conductor', max_length=50)),
            ],
            options={
                'db_table': 'D_OverheadLineConductor',
            },
        ),
        migrations.CreateModel(
            name='D_OverheadLineConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'line_configuration', max_length=50)),
                ('conductor_A', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_A', to='feeder.D_OverheadLineConductor')),
                ('conductor_B', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_B', to='feeder.D_OverheadLineConductor')),
                ('conductor_C', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_C', to='feeder.D_OverheadLineConductor')),
                ('conductor_N', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_N', to='feeder.D_OverheadLineConductor')),
                ('spacing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='feeder.D_LineSpacing')),
            ],
            options={
                'db_table': 'D_OverheadLineConfig',
            },
        ),
        migrations.CreateModel(
            name='D_Regulator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phases', models.CharField(max_length=50)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'regulator', max_length=50, null=True)),
            ],
            options={
                'db_table': 'D_Regulator',
            },
        ),
        migrations.CreateModel(
            name='D_RegulatorConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('connect_type', models.CharField(max_length=50, null=True)),
                ('band_center', models.FloatField(null=True)),
                ('band_width', models.FloatField(null=True)),
                ('time_delay', models.FloatField(null=True)),
                ('raise_taps', models.IntegerField(null=True)),
                ('lower_taps', models.IntegerField(null=True)),
                ('current_transducer_ratio', models.FloatField(null=True)),
                ('power_transducer_ratio', models.FloatField(null=True)),
                ('compensator_r_setting_A', models.FloatField(null=True)),
                ('compensator_x_setting_A', models.FloatField(null=True)),
                ('compensator_r_setting_B', models.FloatField(null=True)),
                ('compensator_x_setting_B', models.FloatField(null=True)),
                ('CT_phase', models.CharField(max_length=20, null=True)),
                ('PT_phase', models.CharField(max_length=20, null=True)),
                ('regulation', models.FloatField(null=True)),
                ('Control', models.CharField(max_length=50, null=True)),
                ('control_level', models.CharField(max_length=50, null=True)),
                ('Type', models.CharField(max_length=50, null=True)),
                ('tap_pos_A', models.IntegerField(null=True)),
                ('tap_pos_B', models.IntegerField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'regulator_configuration', max_length=50)),
            ],
            options={
                'db_table': 'D_RegulatorConfig',
            },
        ),
        migrations.CreateModel(
            name='D_Solar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('generator_status', models.CharField(max_length=20, null=True)),
                ('generator_mode', models.CharField(max_length=20, null=True)),
                ('panel_type', models.CharField(max_length=50, null=True)),
                ('efficiency', models.FloatField(null=True)),
                ('area', models.CharField(max_length=30, null=True)),
                ('orientation', models.CharField(max_length=30, null=True)),
                ('orientation_azimuth', models.IntegerField(null=True)),
                ('latitude_angle_fix', models.NullBooleanField()),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'solar', max_length=50)),
            ],
            options={
                'db_table': 'D_Solar',
            },
        ),
        migrations.CreateModel(
            name='D_Storage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('minCharge', models.FloatField(null=True)),
                ('maxCharge', models.FloatField(null=True)),
                ('initialCharge', models.FloatField(null=True)),
                ('chargeRate', models.FloatField(null=True)),
                ('dischargeRate', models.FloatField(null=True)),
                ('chargeEff', models.FloatField(null=True)),
                ('dischargeEff', models.FloatField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'storage', max_length=50)),
            ],
            options={
                'db_table': 'D_Storage',
            },
        ),
        migrations.CreateModel(
            name='D_Switch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phases', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'switch', max_length=50, null=True)),
            ],
            options={
                'db_table': 'D_Switch',
            },
        ),
        migrations.CreateModel(
            name='D_Transformer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phases', models.CharField(max_length=50)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('gldGroupId', models.CharField(default=b'Distribution_Trans', max_length=50)),
                ('object', models.CharField(default=b'transformer', max_length=50, null=True)),
            ],
            options={
                'db_table': 'D_Transformer',
            },
        ),
        migrations.CreateModel(
            name='D_TransformerConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('connect_type', models.CharField(max_length=50, null=True)),
                ('install_type', models.CharField(max_length=50, null=True)),
                ('primary_voltage', models.FloatField(null=True)),
                ('secondary_voltage', models.FloatField(null=True)),
                ('power_rating', models.FloatField(null=True)),
                ('powerA_rating', models.FloatField(null=True)),
                ('powerB_rating', models.FloatField(null=True)),
                ('powerC_rating', models.FloatField(null=True)),
                ('resistance', models.FloatField(null=True)),
                ('reactance', models.FloatField(null=True)),
                ('impedance', models.CharField(max_length=50, null=True)),
                ('shunt_impedance', models.CharField(max_length=50, null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'transformer_configuration', max_length=50)),
            ],
            options={
                'db_table': 'D_TransformerConfig',
            },
        ),
        migrations.CreateModel(
            name='D_UndergroundLine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phases', models.CharField(max_length=50)),
                ('length', models.FloatField(default=0)),
                ('bmat', models.FloatField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('gldGroupId', models.CharField(default=b'Distribution_Line', max_length=50)),
                ('object', models.CharField(default=b'undergound_line', max_length=50, null=True)),
            ],
            options={
                'db_table': 'D_UndergroundLine',
            },
        ),
        migrations.CreateModel(
            name='D_UndergroundLineConductor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('conductor_resistance', models.FloatField(null=True)),
                ('shield_resistance', models.FloatField(null=True)),
                ('neutral_gmr', models.FloatField(null=True)),
                ('outer_diameter', models.FloatField(null=True)),
                ('neutral_strands', models.FloatField(null=True)),
                ('neutral_resistance', models.FloatField(null=True)),
                ('neutral_diameter', models.FloatField(null=True)),
                ('conductor_diameter', models.FloatField(null=True)),
                ('shield_gmr', models.FloatField(null=True)),
                ('conductor_gmr', models.FloatField(null=True)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'underground_line_conductor', max_length=50)),
            ],
            options={
                'db_table': 'D_UndergroundLineConductor',
            },
        ),
        migrations.CreateModel(
            name='D_UndergroundLineConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gldIndex', models.IntegerField(default=0, null=True)),
                ('object', models.CharField(default=b'line_configuration', max_length=50)),
                ('conductor_A', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_A', to='feeder.D_UndergroundLineConductor')),
                ('conductor_B', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_B', to='feeder.D_UndergroundLineConductor')),
                ('conductor_C', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_C', to='feeder.D_UndergroundLineConductor')),
                ('conductor_N', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_conductor_N', to='feeder.D_UndergroundLineConductor')),
                ('spacing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='feeder.D_LineSpacing')),
            ],
            options={
                'db_table': 'D_UndergroundLineConfig',
            },
        ),
        migrations.CreateModel(
            name='Feeder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Feeder',
            },
        ),
        migrations.AddField(
            model_name='d_undergroundline',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='undergroundlines', to='feeder.D_UndergroundLineConfig'),
        ),
        migrations.AddField(
            model_name='d_undergroundline',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_undergroundlines', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_undergroundline',
            name='fromWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_undergroundline', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_undergroundline',
            name='toWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_undergroundline', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_transformer',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transformers', to='feeder.D_TransformerConfig'),
        ),
        migrations.AddField(
            model_name='d_transformer',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_transformers', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_transformer',
            name='fromWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_transformer', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_transformer',
            name='toWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_transformer', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_switch',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_switches', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_switch',
            name='fromWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_switch', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_switch',
            name='toWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_switch', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_storage',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_storages', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_storage',
            name='parentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storages', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_solar',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_solars', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_solar',
            name='parentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solars', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_regulator',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regulators', to='feeder.D_RegulatorConfig'),
        ),
        migrations.AddField(
            model_name='d_regulator',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_regulators', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_regulator',
            name='fromWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_regulator', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_regulator',
            name='senseNode',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regulator', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_regulator',
            name='toWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_regulator', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_overheadline',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overheadlines', to='feeder.D_OverheadLineConfig'),
        ),
        migrations.AddField(
            model_name='d_overheadline',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_overheadlines', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_overheadline',
            name='fromWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_overheadline', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_overheadline',
            name='toWhere',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_overheadline', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_load',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_loads', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_load',
            name='parentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loads', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_generator',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_generators', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_generator',
            name='parentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generators', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_capacitor',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_capacitors', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_capacitor',
            name='parentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capacitors', to='feeder.D_Bus'),
        ),
        migrations.AddField(
            model_name='d_bus',
            name='feeder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d_buses', to='feeder.Feeder'),
        ),
        migrations.AddField(
            model_name='d_bus',
            name='parentLocation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_bus', to='feeder.D_Bus'),
        ),
        migrations.AlterUniqueTogether(
            name='d_undergroundline',
            unique_together=set([('feeder', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='d_transformer',
            unique_together=set([('feeder', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='d_switch',
            unique_together=set([('feeder', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='d_regulator',
            unique_together=set([('feeder', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='d_overheadline',
            unique_together=set([('feeder', 'name')]),
        ),
    ]
